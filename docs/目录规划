
Middleware
 - Message Queue
   - Apache Kafka
      - 基本概念
      - 配置参数
      - 编码范式
      - 生产运维
      - 生产问题回顾
   - 消息队列选型Poc
   - 高可靠消息方案
   - 消息幂等
 - DataBase
   - Transaction
   - MySQL
    - Engine
    - Lock
        - 乐观锁 & 悲观锁
        - MySQL锁模式
        - MySQL行锁类型
    - Index

NoSQL
- Redis
    - 常用数据结构(zset实现)
    - 线程模型
    - 哨兵与集群
- ES

Distributed System

- CAP&Raft一致性协议
- 注册中心与配置中心
- 分布式事务
- 分布式锁
- 分布式ID策略
- 缓存与数据库一致性
- 负载均衡与Session共享

High Availability
- 多中心架构
- 限流与降级
- 容量规划

Architecture
- Application Architecture
  - 微服务与SOA
  - 幂等性设计
  - 分库分表
  - 内存撮合设计
  - 异步服务同步化方案

- Business Architecture
  - Payment
    - 支付体系
    - 账户清结算
  - Pledge Loan

- Thinking in Architecture
  - 设计模式
  - 架构方法论
  - 云原生&DevOps

- Domain Driven Design
  - 个人对DDD的看法
  - 战略设计与战术设计
  - 架构风格

- Develop Note
  - Backend
    - Dubbo自定义异常扩展
    - Apollo配置项加解密扩展

-------
* 中间件

    * [Kafka](middleware/kafka.md)
    * [MySQL](middleware/mysql.md)
    * [Redis](middleware/redis.md)

* 技术架构

    * [分布式原理](tech_arch/distribution_consistence.md)
    * [分布式事务](tech_arch/distribution_transaction.md)
    * [分布式锁](tech_arch/distribution_lock.md)
    * [分布式ID策略]
    * [分库分表]
    * [缓存数据库一致性]
    * [消息丢失与幂等](tech_arch/message_lost_idempotent.md)

* 系统架构

    * [多活架构]
    * [限流]
    * [容错降级]
    * [微服务网关]
    * [系统性能优化]
    * [稳定性与可用性]

* 业务架构

    * [账务清结算]
    * [热点账户方案]
    * [超时订单设计]
    * [通知回调系统]
    * [订单超时和防重](biz_arch/order_timeout_repeat.md)

* 架构理论

    * [DDD](arch/arch_ddd.md)
    * [设计模式](arch/arch_design_pattern.md)
    * [架构杂想](arch/arch_think.md)

* 领域驱动设计(DDD)

* 其他

    * [收藏夹](others/favorites.md)
    * [读书笔记](others/read_notes.md)
    * [工作生活]
    * [区块链]